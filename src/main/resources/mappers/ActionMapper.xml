<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.sicnu.sc.softwareproduction.dao.ActionMapper">
  <resultMap id="BaseResultMap" type="cn.edu.sicnu.sc.softwareproduction.model.Action">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="objectType" jdbcType="VARCHAR" property="objecttype" />
    <result column="objectID" jdbcType="INTEGER" property="objectid" />
    <result column="workoders" jdbcType="INTEGER" property="workoders" />
    <result column="useroders" jdbcType="INTEGER" property="useroders" />
    <result column="task" jdbcType="INTEGER" property="task" />
    <result column="actor" jdbcType="VARCHAR" property="actor" />
    <result column="action" jdbcType="VARCHAR" property="action" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="read" jdbcType="CHAR" property="read" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.sicnu.sc.softwareproduction.model.Action">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, objectType, objectID, workoders, useroders, task, actor, action, date, read
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.sicnu.sc.softwareproduction.model.ActionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.sicnu.sc.softwareproduction.model.ActionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from action
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from action
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.sicnu.sc.softwareproduction.model.ActionExample">
    delete from action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Action">
    insert into action (id, objectType, objectID, 
      workoders, useroders, task, 
      actor, action, date, 
      read, comment)
    values (#{id,jdbcType=INTEGER}, #{objecttype,jdbcType=VARCHAR}, #{objectid,jdbcType=INTEGER}, 
      #{workoders,jdbcType=INTEGER}, #{useroders,jdbcType=INTEGER}, #{task,jdbcType=INTEGER}, 
      #{actor,jdbcType=VARCHAR}, #{action,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, 
      #{read,jdbcType=CHAR}, #{comment,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Action">
    insert into action
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="objecttype != null">
        objectType,
      </if>
      <if test="objectid != null">
        objectID,
      </if>
      <if test="workoders != null">
        workoders,
      </if>
      <if test="useroders != null">
        useroders,
      </if>
      <if test="task != null">
        task,
      </if>
      <if test="actor != null">
        actor,
      </if>
      <if test="action != null">
        action,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="read != null">
        read,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="objecttype != null">
        #{objecttype,jdbcType=VARCHAR},
      </if>
      <if test="objectid != null">
        #{objectid,jdbcType=INTEGER},
      </if>
      <if test="workoders != null">
        #{workoders,jdbcType=INTEGER},
      </if>
      <if test="useroders != null">
        #{useroders,jdbcType=INTEGER},
      </if>
      <if test="task != null">
        #{task,jdbcType=INTEGER},
      </if>
      <if test="actor != null">
        #{actor,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="read != null">
        #{read,jdbcType=CHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.sicnu.sc.softwareproduction.model.ActionExample" resultType="java.lang.Long">
    select count(*) from action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update action
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.objecttype != null">
        objectType = #{record.objecttype,jdbcType=VARCHAR},
      </if>
      <if test="record.objectid != null">
        objectID = #{record.objectid,jdbcType=INTEGER},
      </if>
      <if test="record.workoders != null">
        workoders = #{record.workoders,jdbcType=INTEGER},
      </if>
      <if test="record.useroders != null">
        useroders = #{record.useroders,jdbcType=INTEGER},
      </if>
      <if test="record.task != null">
        task = #{record.task,jdbcType=INTEGER},
      </if>
      <if test="record.actor != null">
        actor = #{record.actor,jdbcType=VARCHAR},
      </if>
      <if test="record.action != null">
        action = #{record.action,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.read != null">
        read = #{record.read,jdbcType=CHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update action
    set id = #{record.id,jdbcType=INTEGER},
      objectType = #{record.objecttype,jdbcType=VARCHAR},
      objectID = #{record.objectid,jdbcType=INTEGER},
      workoders = #{record.workoders,jdbcType=INTEGER},
      useroders = #{record.useroders,jdbcType=INTEGER},
      task = #{record.task,jdbcType=INTEGER},
      actor = #{record.actor,jdbcType=VARCHAR},
      action = #{record.action,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIMESTAMP},
      read = #{record.read,jdbcType=CHAR},
      comment = #{record.comment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update action
    set id = #{record.id,jdbcType=INTEGER},
      objectType = #{record.objecttype,jdbcType=VARCHAR},
      objectID = #{record.objectid,jdbcType=INTEGER},
      workoders = #{record.workoders,jdbcType=INTEGER},
      useroders = #{record.useroders,jdbcType=INTEGER},
      task = #{record.task,jdbcType=INTEGER},
      actor = #{record.actor,jdbcType=VARCHAR},
      action = #{record.action,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIMESTAMP},
      read = #{record.read,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Action">
    update action
    <set>
      <if test="objecttype != null">
        objectType = #{objecttype,jdbcType=VARCHAR},
      </if>
      <if test="objectid != null">
        objectID = #{objectid,jdbcType=INTEGER},
      </if>
      <if test="workoders != null">
        workoders = #{workoders,jdbcType=INTEGER},
      </if>
      <if test="useroders != null">
        useroders = #{useroders,jdbcType=INTEGER},
      </if>
      <if test="task != null">
        task = #{task,jdbcType=INTEGER},
      </if>
      <if test="actor != null">
        actor = #{actor,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        action = #{action,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="read != null">
        read = #{read,jdbcType=CHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Action">
    update action
    set objectType = #{objecttype,jdbcType=VARCHAR},
      objectID = #{objectid,jdbcType=INTEGER},
      workoders = #{workoders,jdbcType=INTEGER},
      useroders = #{useroders,jdbcType=INTEGER},
      task = #{task,jdbcType=INTEGER},
      actor = #{actor,jdbcType=VARCHAR},
      action = #{action,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      read = #{read,jdbcType=CHAR},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Action">
    update action
    set objectType = #{objecttype,jdbcType=VARCHAR},
      objectID = #{objectid,jdbcType=INTEGER},
      workoders = #{workoders,jdbcType=INTEGER},
      useroders = #{useroders,jdbcType=INTEGER},
      task = #{task,jdbcType=INTEGER},
      actor = #{actor,jdbcType=VARCHAR},
      action = #{action,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      read = #{read,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>