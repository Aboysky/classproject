<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.sicnu.sc.softwareproduction.dao.TodoMapper">
  <resultMap id="BaseResultMap" type="cn.edu.sicnu.sc.softwareproduction.model.Todo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="CHAR" property="account" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="begin" jdbcType="SMALLINT" property="begin" />
    <result column="end" jdbcType="SMALLINT" property="end" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="cycle" jdbcType="TINYINT" property="cycle" />
    <result column="idvalue" jdbcType="INTEGER" property="idvalue" />
    <result column="pri" jdbcType="TINYINT" property="pri" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="private" jdbcType="BIT" property="private" />
    <result column="config" jdbcType="VARCHAR" property="config" />
    <result column="assignedTo" jdbcType="VARCHAR" property="assignedto" />
    <result column="assignedBy" jdbcType="VARCHAR" property="assignedby" />
    <result column="assignedDate" jdbcType="TIMESTAMP" property="assigneddate" />
    <result column="finishedBy" jdbcType="VARCHAR" property="finishedby" />
    <result column="finishedDate" jdbcType="TIMESTAMP" property="finisheddate" />
    <result column="closedBy" jdbcType="VARCHAR" property="closedby" />
    <result column="closedDate" jdbcType="TIMESTAMP" property="closeddate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.sicnu.sc.softwareproduction.model.Todo">
    <result column="desc" jdbcType="LONGVARCHAR" property="desc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, date, begin, end, type, cycle, idvalue, pri, name, status, private, 
    config, assignedTo, assignedBy, assignedDate, finishedBy, finishedDate, closedBy, 
    closedDate
  </sql>
  <sql id="Blob_Column_List">
    desc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.sicnu.sc.softwareproduction.model.TodoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from todo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.sicnu.sc.softwareproduction.model.TodoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from todo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from todo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from todo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.sicnu.sc.softwareproduction.model.TodoExample">
    delete from todo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Todo">
    insert into todo (id, account, date, 
      begin, end, type, cycle, 
      idvalue, pri, name, status, 
      private, config, assignedTo, 
      assignedBy, assignedDate, finishedBy, 
      finishedDate, closedBy, closedDate, 
      desc)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=CHAR}, #{date,jdbcType=DATE}, 
      #{begin,jdbcType=SMALLINT}, #{end,jdbcType=SMALLINT}, #{type,jdbcType=CHAR}, #{cycle,jdbcType=TINYINT}, 
      #{idvalue,jdbcType=INTEGER}, #{pri,jdbcType=TINYINT}, #{name,jdbcType=CHAR}, #{status,jdbcType=CHAR}, 
      #{private,jdbcType=BIT}, #{config,jdbcType=VARCHAR}, #{assignedto,jdbcType=VARCHAR}, 
      #{assignedby,jdbcType=VARCHAR}, #{assigneddate,jdbcType=TIMESTAMP}, #{finishedby,jdbcType=VARCHAR}, 
      #{finisheddate,jdbcType=TIMESTAMP}, #{closedby,jdbcType=VARCHAR}, #{closeddate,jdbcType=TIMESTAMP}, 
      #{desc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Todo">
    insert into todo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="begin != null">
        begin,
      </if>
      <if test="end != null">
        end,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="cycle != null">
        cycle,
      </if>
      <if test="idvalue != null">
        idvalue,
      </if>
      <if test="pri != null">
        pri,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="private != null">
        private,
      </if>
      <if test="config != null">
        config,
      </if>
      <if test="assignedto != null">
        assignedTo,
      </if>
      <if test="assignedby != null">
        assignedBy,
      </if>
      <if test="assigneddate != null">
        assignedDate,
      </if>
      <if test="finishedby != null">
        finishedBy,
      </if>
      <if test="finisheddate != null">
        finishedDate,
      </if>
      <if test="closedby != null">
        closedBy,
      </if>
      <if test="closeddate != null">
        closedDate,
      </if>
      <if test="desc != null">
        desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=CHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="begin != null">
        #{begin,jdbcType=SMALLINT},
      </if>
      <if test="end != null">
        #{end,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="cycle != null">
        #{cycle,jdbcType=TINYINT},
      </if>
      <if test="idvalue != null">
        #{idvalue,jdbcType=INTEGER},
      </if>
      <if test="pri != null">
        #{pri,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="private != null">
        #{private,jdbcType=BIT},
      </if>
      <if test="config != null">
        #{config,jdbcType=VARCHAR},
      </if>
      <if test="assignedto != null">
        #{assignedto,jdbcType=VARCHAR},
      </if>
      <if test="assignedby != null">
        #{assignedby,jdbcType=VARCHAR},
      </if>
      <if test="assigneddate != null">
        #{assigneddate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishedby != null">
        #{finishedby,jdbcType=VARCHAR},
      </if>
      <if test="finisheddate != null">
        #{finisheddate,jdbcType=TIMESTAMP},
      </if>
      <if test="closedby != null">
        #{closedby,jdbcType=VARCHAR},
      </if>
      <if test="closeddate != null">
        #{closeddate,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.sicnu.sc.softwareproduction.model.TodoExample" resultType="java.lang.Long">
    select count(*) from todo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update todo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=CHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.begin != null">
        begin = #{record.begin,jdbcType=SMALLINT},
      </if>
      <if test="record.end != null">
        end = #{record.end,jdbcType=SMALLINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.cycle != null">
        cycle = #{record.cycle,jdbcType=TINYINT},
      </if>
      <if test="record.idvalue != null">
        idvalue = #{record.idvalue,jdbcType=INTEGER},
      </if>
      <if test="record.pri != null">
        pri = #{record.pri,jdbcType=TINYINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.private != null">
        private = #{record.private,jdbcType=BIT},
      </if>
      <if test="record.config != null">
        config = #{record.config,jdbcType=VARCHAR},
      </if>
      <if test="record.assignedto != null">
        assignedTo = #{record.assignedto,jdbcType=VARCHAR},
      </if>
      <if test="record.assignedby != null">
        assignedBy = #{record.assignedby,jdbcType=VARCHAR},
      </if>
      <if test="record.assigneddate != null">
        assignedDate = #{record.assigneddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishedby != null">
        finishedBy = #{record.finishedby,jdbcType=VARCHAR},
      </if>
      <if test="record.finisheddate != null">
        finishedDate = #{record.finisheddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.closedby != null">
        closedBy = #{record.closedby,jdbcType=VARCHAR},
      </if>
      <if test="record.closeddate != null">
        closedDate = #{record.closeddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.desc != null">
        desc = #{record.desc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update todo
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=CHAR},
      date = #{record.date,jdbcType=DATE},
      begin = #{record.begin,jdbcType=SMALLINT},
      end = #{record.end,jdbcType=SMALLINT},
      type = #{record.type,jdbcType=CHAR},
      cycle = #{record.cycle,jdbcType=TINYINT},
      idvalue = #{record.idvalue,jdbcType=INTEGER},
      pri = #{record.pri,jdbcType=TINYINT},
      name = #{record.name,jdbcType=CHAR},
      status = #{record.status,jdbcType=CHAR},
      private = #{record.private,jdbcType=BIT},
      config = #{record.config,jdbcType=VARCHAR},
      assignedTo = #{record.assignedto,jdbcType=VARCHAR},
      assignedBy = #{record.assignedby,jdbcType=VARCHAR},
      assignedDate = #{record.assigneddate,jdbcType=TIMESTAMP},
      finishedBy = #{record.finishedby,jdbcType=VARCHAR},
      finishedDate = #{record.finisheddate,jdbcType=TIMESTAMP},
      closedBy = #{record.closedby,jdbcType=VARCHAR},
      closedDate = #{record.closeddate,jdbcType=TIMESTAMP},
      desc = #{record.desc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update todo
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=CHAR},
      date = #{record.date,jdbcType=DATE},
      begin = #{record.begin,jdbcType=SMALLINT},
      end = #{record.end,jdbcType=SMALLINT},
      type = #{record.type,jdbcType=CHAR},
      cycle = #{record.cycle,jdbcType=TINYINT},
      idvalue = #{record.idvalue,jdbcType=INTEGER},
      pri = #{record.pri,jdbcType=TINYINT},
      name = #{record.name,jdbcType=CHAR},
      status = #{record.status,jdbcType=CHAR},
      private = #{record.private,jdbcType=BIT},
      config = #{record.config,jdbcType=VARCHAR},
      assignedTo = #{record.assignedto,jdbcType=VARCHAR},
      assignedBy = #{record.assignedby,jdbcType=VARCHAR},
      assignedDate = #{record.assigneddate,jdbcType=TIMESTAMP},
      finishedBy = #{record.finishedby,jdbcType=VARCHAR},
      finishedDate = #{record.finisheddate,jdbcType=TIMESTAMP},
      closedBy = #{record.closedby,jdbcType=VARCHAR},
      closedDate = #{record.closeddate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Todo">
    update todo
    <set>
      <if test="account != null">
        account = #{account,jdbcType=CHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="begin != null">
        begin = #{begin,jdbcType=SMALLINT},
      </if>
      <if test="end != null">
        end = #{end,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="cycle != null">
        cycle = #{cycle,jdbcType=TINYINT},
      </if>
      <if test="idvalue != null">
        idvalue = #{idvalue,jdbcType=INTEGER},
      </if>
      <if test="pri != null">
        pri = #{pri,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="private != null">
        private = #{private,jdbcType=BIT},
      </if>
      <if test="config != null">
        config = #{config,jdbcType=VARCHAR},
      </if>
      <if test="assignedto != null">
        assignedTo = #{assignedto,jdbcType=VARCHAR},
      </if>
      <if test="assignedby != null">
        assignedBy = #{assignedby,jdbcType=VARCHAR},
      </if>
      <if test="assigneddate != null">
        assignedDate = #{assigneddate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishedby != null">
        finishedBy = #{finishedby,jdbcType=VARCHAR},
      </if>
      <if test="finisheddate != null">
        finishedDate = #{finisheddate,jdbcType=TIMESTAMP},
      </if>
      <if test="closedby != null">
        closedBy = #{closedby,jdbcType=VARCHAR},
      </if>
      <if test="closeddate != null">
        closedDate = #{closeddate,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Todo">
    update todo
    set account = #{account,jdbcType=CHAR},
      date = #{date,jdbcType=DATE},
      begin = #{begin,jdbcType=SMALLINT},
      end = #{end,jdbcType=SMALLINT},
      type = #{type,jdbcType=CHAR},
      cycle = #{cycle,jdbcType=TINYINT},
      idvalue = #{idvalue,jdbcType=INTEGER},
      pri = #{pri,jdbcType=TINYINT},
      name = #{name,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      private = #{private,jdbcType=BIT},
      config = #{config,jdbcType=VARCHAR},
      assignedTo = #{assignedto,jdbcType=VARCHAR},
      assignedBy = #{assignedby,jdbcType=VARCHAR},
      assignedDate = #{assigneddate,jdbcType=TIMESTAMP},
      finishedBy = #{finishedby,jdbcType=VARCHAR},
      finishedDate = #{finisheddate,jdbcType=TIMESTAMP},
      closedBy = #{closedby,jdbcType=VARCHAR},
      closedDate = #{closeddate,jdbcType=TIMESTAMP},
      desc = #{desc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Todo">
    update todo
    set account = #{account,jdbcType=CHAR},
      date = #{date,jdbcType=DATE},
      begin = #{begin,jdbcType=SMALLINT},
      end = #{end,jdbcType=SMALLINT},
      type = #{type,jdbcType=CHAR},
      cycle = #{cycle,jdbcType=TINYINT},
      idvalue = #{idvalue,jdbcType=INTEGER},
      pri = #{pri,jdbcType=TINYINT},
      name = #{name,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      private = #{private,jdbcType=BIT},
      config = #{config,jdbcType=VARCHAR},
      assignedTo = #{assignedto,jdbcType=VARCHAR},
      assignedBy = #{assignedby,jdbcType=VARCHAR},
      assignedDate = #{assigneddate,jdbcType=TIMESTAMP},
      finishedBy = #{finishedby,jdbcType=VARCHAR},
      finishedDate = #{finisheddate,jdbcType=TIMESTAMP},
      closedBy = #{closedby,jdbcType=VARCHAR},
      closedDate = #{closeddate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>