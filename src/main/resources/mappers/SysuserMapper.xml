<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.sicnu.sc.softwareproduction.dao.SysuserMapper">
  <resultMap id="BaseResultMap" type="cn.edu.sicnu.sc.softwareproduction.model.Sysuser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dept" jdbcType="INTEGER" property="dept" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="join" jdbcType="DATE" property="join" />
    <result column="visits" jdbcType="INTEGER" property="visits" />
    <result column="ip" jdbcType="CHAR" property="ip" />
    <result column="last" jdbcType="INTEGER" property="last" />
    <result column="fails" jdbcType="TINYINT" property="fails" />
    <result column="locked" jdbcType="TIMESTAMP" property="locked" />
    <result column="deleted" jdbcType="CHAR" property="deleted" />
    <result column="clientStatus" jdbcType="CHAR" property="clientstatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, dept, account, password, role, realname, gender, email, mobile, address, join, 
    visits, ip, last, fails, locked, deleted, clientStatus
  </sql>
  <select id="selectByExample" parameterType="cn.edu.sicnu.sc.softwareproduction.model.SysuserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sysuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sysuser
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sysuser
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.sicnu.sc.softwareproduction.model.SysuserExample">
    delete from sysuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Sysuser">
    insert into sysuser (id, dept, account, 
      password, role, realname, 
      gender, email, mobile, 
      address, join, visits, 
      ip, last, fails, locked, 
      deleted, clientStatus)
    values (#{id,jdbcType=INTEGER}, #{dept,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{gender,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{join,jdbcType=DATE}, #{visits,jdbcType=INTEGER}, 
      #{ip,jdbcType=CHAR}, #{last,jdbcType=INTEGER}, #{fails,jdbcType=TINYINT}, #{locked,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=CHAR}, #{clientstatus,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Sysuser">
    insert into sysuser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="join != null">
        join,
      </if>
      <if test="visits != null">
        visits,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="last != null">
        last,
      </if>
      <if test="fails != null">
        fails,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="clientstatus != null">
        clientStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="join != null">
        #{join,jdbcType=DATE},
      </if>
      <if test="visits != null">
        #{visits,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=CHAR},
      </if>
      <if test="last != null">
        #{last,jdbcType=INTEGER},
      </if>
      <if test="fails != null">
        #{fails,jdbcType=TINYINT},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=CHAR},
      </if>
      <if test="clientstatus != null">
        #{clientstatus,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.sicnu.sc.softwareproduction.model.SysuserExample" resultType="java.lang.Long">
    select count(*) from sysuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sysuser
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dept != null">
        dept = #{record.dept,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.join != null">
        join = #{record.join,jdbcType=DATE},
      </if>
      <if test="record.visits != null">
        visits = #{record.visits,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=CHAR},
      </if>
      <if test="record.last != null">
        last = #{record.last,jdbcType=INTEGER},
      </if>
      <if test="record.fails != null">
        fails = #{record.fails,jdbcType=TINYINT},
      </if>
      <if test="record.locked != null">
        locked = #{record.locked,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=CHAR},
      </if>
      <if test="record.clientstatus != null">
        clientStatus = #{record.clientstatus,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sysuser
    set id = #{record.id,jdbcType=INTEGER},
      dept = #{record.dept,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      join = #{record.join,jdbcType=DATE},
      visits = #{record.visits,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=CHAR},
      last = #{record.last,jdbcType=INTEGER},
      fails = #{record.fails,jdbcType=TINYINT},
      locked = #{record.locked,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=CHAR},
      clientStatus = #{record.clientstatus,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Sysuser">
    update sysuser
    <set>
      <if test="dept != null">
        dept = #{dept,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="join != null">
        join = #{join,jdbcType=DATE},
      </if>
      <if test="visits != null">
        visits = #{visits,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=CHAR},
      </if>
      <if test="last != null">
        last = #{last,jdbcType=INTEGER},
      </if>
      <if test="fails != null">
        fails = #{fails,jdbcType=TINYINT},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=CHAR},
      </if>
      <if test="clientstatus != null">
        clientStatus = #{clientstatus,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.sicnu.sc.softwareproduction.model.Sysuser">
    update sysuser
    set dept = #{dept,jdbcType=INTEGER},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      join = #{join,jdbcType=DATE},
      visits = #{visits,jdbcType=INTEGER},
      ip = #{ip,jdbcType=CHAR},
      last = #{last,jdbcType=INTEGER},
      fails = #{fails,jdbcType=TINYINT},
      locked = #{locked,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=CHAR},
      clientStatus = #{clientstatus,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>