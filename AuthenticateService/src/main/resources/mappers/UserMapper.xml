<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.sicnu.cs.dao.UserMapper">

<!--  <cache type="cn.edu.sicnu.cs.cache.RedisCache"/>-->

  <resultMap id="BaseResultMap" type="cn.edu.sicnu.cs.model.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="ucompany_id" jdbcType="INTEGER" property="ucompanyId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="urole_id" jdbcType="INTEGER" property="uroleId" />
    <result column="urealname" jdbcType="VARCHAR" property="urealname" />
    <result column="ugender" jdbcType="CHAR" property="ugender" />
    <result column="uemail" jdbcType="VARCHAR" property="uemail" />
    <result column="umobile" jdbcType="VARCHAR" property="umobile" />
    <result column="ujoin" jdbcType="TIMESTAMP" property="ujoin" />
    <result column="uvisits" jdbcType="INTEGER" property="uvisits" />
    <result column="uip" jdbcType="VARCHAR" property="uip" />
    <result column="ulasttime" jdbcType="TIMESTAMP" property="ulasttime" />
    <result column="ulocked" jdbcType="CHAR" property="ulocked" />
    <result column="udeleted" jdbcType="CHAR" property="udeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, ucompany_id, username, password, urole_id, urealname, ugender, uemail, umobile, 
    ujoin, uvisits, uip, ulasttime, ulocked, udeleted
  </sql>
  <select id="selectByExample" parameterType="cn.edu.sicnu.cs.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectPage"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user where udeleted = '0' and urole_id !='1'
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.sicnu.cs.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.sicnu.cs.model.User">
    insert into user (uid, ucompany_id, username, 
      password, urole_id, urealname, 
      ugender, uemail, umobile, 
      ujoin, uvisits, uip, 
      ulasttime, ulocked, udeleted
      )
    values (#{uid,jdbcType=INTEGER}, #{ucompanyId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{uroleId,jdbcType=INTEGER}, #{urealname,jdbcType=VARCHAR}, 
      #{ugender,jdbcType=CHAR}, #{uemail,jdbcType=VARCHAR}, #{umobile,jdbcType=VARCHAR}, 
      #{ujoin,jdbcType=TIMESTAMP}, #{uvisits,jdbcType=INTEGER}, #{uip,jdbcType=VARCHAR}, 
      #{ulasttime,jdbcType=TIMESTAMP}, #{ulocked,jdbcType=CHAR}, #{udeleted,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.sicnu.cs.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="ucompanyId != null">
        ucompany_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="uroleId != null">
        urole_id,
      </if>
      <if test="urealname != null">
        urealname,
      </if>
      <if test="ugender != null">
        ugender,
      </if>
      <if test="uemail != null">
        uemail,
      </if>
      <if test="umobile != null">
        umobile,
      </if>
      <if test="ujoin != null">
        ujoin,
      </if>
      <if test="uvisits != null">
        uvisits,
      </if>
      <if test="uip != null">
        uip,
      </if>
      <if test="ulasttime != null">
        ulasttime,
      </if>
      <if test="ulocked != null">
        ulocked,
      </if>
      <if test="udeleted != null">
        udeleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="ucompanyId != null">
        #{ucompanyId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="uroleId != null">
        #{uroleId,jdbcType=INTEGER},
      </if>
      <if test="urealname != null">
        #{urealname,jdbcType=VARCHAR},
      </if>
      <if test="ugender != null">
        #{ugender,jdbcType=CHAR},
      </if>
      <if test="uemail != null">
        #{uemail,jdbcType=VARCHAR},
      </if>
      <if test="umobile != null">
        #{umobile,jdbcType=VARCHAR},
      </if>
      <if test="ujoin != null">
        #{ujoin,jdbcType=TIMESTAMP},
      </if>
      <if test="uvisits != null">
        #{uvisits,jdbcType=INTEGER},
      </if>
      <if test="uip != null">
        #{uip,jdbcType=VARCHAR},
      </if>
      <if test="ulasttime != null">
        #{ulasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="ulocked != null">
        #{ulocked,jdbcType=CHAR},
      </if>
      <if test="udeleted != null">
        #{udeleted,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.sicnu.cs.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectUidByUsername" resultType="java.lang.Integer">
    select uid from user where urealname = #{username}
  </select>
  <select id="selectUidByRolename" resultType="cn.edu.sicnu.cs.pojo.engineer">
    select uid,urealname,rname from user,role where role.rname = #{rolename} and role.rid = `user`.uid
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.ucompanyId != null">
        ucompany_id = #{record.ucompanyId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.uroleId != null">
        urole_id = #{record.uroleId,jdbcType=INTEGER},
      </if>
      <if test="record.urealname != null">
        urealname = #{record.urealname,jdbcType=VARCHAR},
      </if>
      <if test="record.ugender != null">
        ugender = #{record.ugender,jdbcType=CHAR},
      </if>
      <if test="record.uemail != null">
        uemail = #{record.uemail,jdbcType=VARCHAR},
      </if>
      <if test="record.umobile != null">
        umobile = #{record.umobile,jdbcType=VARCHAR},
      </if>
      <if test="record.ujoin != null">
        ujoin = #{record.ujoin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uvisits != null">
        uvisits = #{record.uvisits,jdbcType=INTEGER},
      </if>
      <if test="record.uip != null">
        uip = #{record.uip,jdbcType=VARCHAR},
      </if>
      <if test="record.ulasttime != null">
        ulasttime = #{record.ulasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ulocked != null">
        ulocked = #{record.ulocked,jdbcType=CHAR},
      </if>
      <if test="record.udeleted != null">
        udeleted = #{record.udeleted,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set uid = #{record.uid,jdbcType=INTEGER},
      ucompany_id = #{record.ucompanyId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      urole_id = #{record.uroleId,jdbcType=INTEGER},
      urealname = #{record.urealname,jdbcType=VARCHAR},
      ugender = #{record.ugender,jdbcType=CHAR},
      uemail = #{record.uemail,jdbcType=VARCHAR},
      umobile = #{record.umobile,jdbcType=VARCHAR},
      ujoin = #{record.ujoin,jdbcType=TIMESTAMP},
      uvisits = #{record.uvisits,jdbcType=INTEGER},
      uip = #{record.uip,jdbcType=VARCHAR},
      ulasttime = #{record.ulasttime,jdbcType=TIMESTAMP},
      ulocked = #{record.ulocked,jdbcType=CHAR},
      udeleted = #{record.udeleted,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.sicnu.cs.model.User">
    update user
    <set>
      <if test="ucompanyId != null">
        ucompany_id = #{ucompanyId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="uroleId != null">
        urole_id = #{uroleId,jdbcType=INTEGER},
      </if>
      <if test="urealname != null">
        urealname = #{urealname,jdbcType=VARCHAR},
      </if>
      <if test="ugender != null">
        ugender = #{ugender,jdbcType=CHAR},
      </if>
      <if test="uemail != null">
        uemail = #{uemail,jdbcType=VARCHAR},
      </if>
      <if test="umobile != null">
        umobile = #{umobile,jdbcType=VARCHAR},
      </if>
      <if test="ujoin != null">
        ujoin = #{ujoin,jdbcType=TIMESTAMP},
      </if>
      <if test="uvisits != null">
        uvisits = #{uvisits,jdbcType=INTEGER},
      </if>
      <if test="uip != null">
        uip = #{uip,jdbcType=VARCHAR},
      </if>
      <if test="ulasttime != null">
        ulasttime = #{ulasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="ulocked != null">
        ulocked = #{ulocked,jdbcType=CHAR},
      </if>
      <if test="udeleted != null">
        udeleted = #{udeleted,jdbcType=CHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.sicnu.cs.model.User">
    update user
    set ucompany_id = #{ucompanyId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      urole_id = #{uroleId,jdbcType=INTEGER},
      urealname = #{urealname,jdbcType=VARCHAR},
      ugender = #{ugender,jdbcType=CHAR},
      uemail = #{uemail,jdbcType=VARCHAR},
      umobile = #{umobile,jdbcType=VARCHAR},
      ujoin = #{ujoin,jdbcType=TIMESTAMP},
      uvisits = #{uvisits,jdbcType=INTEGER},
      uip = #{uip,jdbcType=VARCHAR},
      ulasttime = #{ulasttime,jdbcType=TIMESTAMP},
      ulocked = #{ulocked,jdbcType=CHAR},
      udeleted = #{udeleted,jdbcType=CHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateRoleByUsername">
      update user set urole_id = (select rid from role where rname = #{rolename}) where username = #{username}
  </update>
</mapper>