<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.sicnu.cs.dao.TeamMapper">
  <resultMap id="BaseResultMap" type="cn.edu.sicnu.cs.model.Team">
    <id column="tezid" jdbcType="INTEGER" property="tezid" />
    <result column="te_did" jdbcType="INTEGER" property="teDid" />
    <result column="te_uid" jdbcType="INTEGER" property="teUid" />
    <result column="tedays" jdbcType="INTEGER" property="tedays" />
    <result column="tehours" jdbcType="REAL" property="tehours" />
    <result column="teestimate" jdbcType="INTEGER" property="teestimate" />
  </resultMap>
  <select id="selectTeidByFzname" resultType="java.lang.Integer">
    select teid from team where te_fzid = (select uid from user where urealname = #{fzname})
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tezid, te_did, te_uid, tedays, tehours, teestimate
  </sql>
  <select id="selectByExample" parameterType="cn.edu.sicnu.cs.model.TeamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from team
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from team
    where tezid = #{tezid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from team
    where tezid = #{tezid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.sicnu.cs.model.TeamExample">
    delete from team
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.sicnu.cs.model.Team">
    insert into team (tezid, te_did, te_uid, 
      tedays, tehours, teestimate
      )
    values (#{tezid,jdbcType=INTEGER}, #{teDid,jdbcType=INTEGER}, #{teUid,jdbcType=INTEGER}, 
      #{tedays,jdbcType=INTEGER}, #{tehours,jdbcType=REAL}, #{teestimate,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.sicnu.cs.model.Team">
    insert into team
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tezid != null">
        tezid,
      </if>
      <if test="teDid != null">
        te_did,
      </if>
      <if test="teUid != null">
        te_uid,
      </if>
      <if test="tedays != null">
        tedays,
      </if>
      <if test="tehours != null">
        tehours,
      </if>
      <if test="teestimate != null">
        teestimate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tezid != null">
        #{tezid,jdbcType=INTEGER},
      </if>
      <if test="teDid != null">
        #{teDid,jdbcType=INTEGER},
      </if>
      <if test="teUid != null">
        #{teUid,jdbcType=INTEGER},
      </if>
      <if test="tedays != null">
        #{tedays,jdbcType=INTEGER},
      </if>
      <if test="tehours != null">
        #{tehours,jdbcType=REAL},
      </if>
      <if test="teestimate != null">
        #{teestimate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.sicnu.cs.model.TeamExample" resultType="java.lang.Long">
    select count(*) from team
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update team
    <set>
      <if test="record.tezid != null">
        tezid = #{record.tezid,jdbcType=INTEGER},
      </if>
      <if test="record.teDid != null">
        te_did = #{record.teDid,jdbcType=INTEGER},
      </if>
      <if test="record.teUid != null">
        te_uid = #{record.teUid,jdbcType=INTEGER},
      </if>
      <if test="record.tedays != null">
        tedays = #{record.tedays,jdbcType=INTEGER},
      </if>
      <if test="record.tehours != null">
        tehours = #{record.tehours,jdbcType=REAL},
      </if>
      <if test="record.teestimate != null">
        teestimate = #{record.teestimate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update team
    set tezid = #{record.tezid,jdbcType=INTEGER},
      te_did = #{record.teDid,jdbcType=INTEGER},
      te_uid = #{record.teUid,jdbcType=INTEGER},
      tedays = #{record.tedays,jdbcType=INTEGER},
      tehours = #{record.tehours,jdbcType=REAL},
      teestimate = #{record.teestimate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.sicnu.cs.model.Team">
    update team
    <set>
      <if test="teDid != null">
        te_did = #{teDid,jdbcType=INTEGER},
      </if>
      <if test="teUid != null">
        te_uid = #{teUid,jdbcType=INTEGER},
      </if>
      <if test="tedays != null">
        tedays = #{tedays,jdbcType=INTEGER},
      </if>
      <if test="tehours != null">
        tehours = #{tehours,jdbcType=REAL},
      </if>
      <if test="teestimate != null">
        teestimate = #{teestimate,jdbcType=INTEGER},
      </if>
    </set>
    where tezid = #{tezid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.sicnu.cs.model.Team">
    update team
    set te_did = #{teDid,jdbcType=INTEGER},
      te_uid = #{teUid,jdbcType=INTEGER},
      tedays = #{tedays,jdbcType=INTEGER},
      tehours = #{tehours,jdbcType=REAL},
      teestimate = #{teestimate,jdbcType=INTEGER}
    where tezid = #{tezid,jdbcType=INTEGER}
  </update>
</mapper>