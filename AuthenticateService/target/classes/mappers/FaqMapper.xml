<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.sicnu.cs.dao.FaqMapper">
  <resultMap id="BaseResultMap" type="cn.edu.sicnu.cs.model.Faq">
    <id column="qid" jdbcType="INTEGER" property="qid" />
    <result column="qname" jdbcType="VARCHAR" property="qname" />
    <result column="qcreater_id" jdbcType="INTEGER" property="qcreaterId" />
    <result column="qtime" jdbcType="TIMESTAMP" property="qtime" />
    <result column="quptimestamp" jdbcType="TIMESTAMP" property="quptimestamp" />
    <result column="qtype" jdbcType="VARCHAR" property="qtype" />
    <result column="qgood" jdbcType="INTEGER" property="qgood" />
    <result column="qbad" jdbcType="INTEGER" property="qbad" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.sicnu.cs.model.Faq">
    <result column="qdec" jdbcType="LONGVARCHAR" property="qdec" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    qid, qname, qcreater_id, qtime, quptimestamp, qtype, qgood, qbad
  </sql>
  <sql id="Blob_Column_List">
    qdec
  </sql>
  
  <select id="findFaqListByType" resultType="cn.edu.sicnu.cs.model.Faq">
    select qname from faq where qtype = #{type};
  </select>
  
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.sicnu.cs.model.FaqExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from faq
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.sicnu.cs.model.FaqExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from faq
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from faq
    where qid = #{qid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from faq
    where qid = #{qid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.sicnu.cs.model.FaqExample">
    delete from faq
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.sicnu.cs.model.Faq">
    insert into faq (qid, qname, qcreater_id, 
      qtime, quptimestamp, qtype, 
      qgood, qbad, qdec
      )
    values (#{qid,jdbcType=INTEGER}, #{qname,jdbcType=VARCHAR}, #{qcreaterId,jdbcType=INTEGER}, 
      #{qtime,jdbcType=TIMESTAMP}, #{quptimestamp,jdbcType=TIMESTAMP}, #{qtype,jdbcType=VARCHAR}, 
      #{qgood,jdbcType=INTEGER}, #{qbad,jdbcType=INTEGER}, #{qdec,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.sicnu.cs.model.Faq">
    insert into faq
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="qid != null">
        qid,
      </if>
      <if test="qname != null">
        qname,
      </if>
      <if test="qcreaterId != null">
        qcreater_id,
      </if>
      <if test="qtime != null">
        qtime,
      </if>
      <if test="quptimestamp != null">
        quptimestamp,
      </if>
      <if test="qtype != null">
        qtype,
      </if>
      <if test="qgood != null">
        qgood,
      </if>
      <if test="qbad != null">
        qbad,
      </if>
      <if test="qdec != null">
        qdec,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="qid != null">
        #{qid,jdbcType=INTEGER},
      </if>
      <if test="qname != null">
        #{qname,jdbcType=VARCHAR},
      </if>
      <if test="qcreaterId != null">
        #{qcreaterId,jdbcType=INTEGER},
      </if>
      <if test="qtime != null">
        #{qtime,jdbcType=TIMESTAMP},
      </if>
      <if test="quptimestamp != null">
        #{quptimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="qtype != null">
        #{qtype,jdbcType=VARCHAR},
      </if>
      <if test="qgood != null">
        #{qgood,jdbcType=INTEGER},
      </if>
      <if test="qbad != null">
        #{qbad,jdbcType=INTEGER},
      </if>
      <if test="qdec != null">
        #{qdec,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.sicnu.cs.model.FaqExample" resultType="java.lang.Long">
    select count(*) from faq
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update faq
    <set>
      <if test="record.qid != null">
        qid = #{record.qid,jdbcType=INTEGER},
      </if>
      <if test="record.qname != null">
        qname = #{record.qname,jdbcType=VARCHAR},
      </if>
      <if test="record.qcreaterId != null">
        qcreater_id = #{record.qcreaterId,jdbcType=INTEGER},
      </if>
      <if test="record.qtime != null">
        qtime = #{record.qtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.quptimestamp != null">
        quptimestamp = #{record.quptimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.qtype != null">
        qtype = #{record.qtype,jdbcType=VARCHAR},
      </if>
      <if test="record.qgood != null">
        qgood = #{record.qgood,jdbcType=INTEGER},
      </if>
      <if test="record.qbad != null">
        qbad = #{record.qbad,jdbcType=INTEGER},
      </if>
      <if test="record.qdec != null">
        qdec = #{record.qdec,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update faq
    set qid = #{record.qid,jdbcType=INTEGER},
      qname = #{record.qname,jdbcType=VARCHAR},
      qcreater_id = #{record.qcreaterId,jdbcType=INTEGER},
      qtime = #{record.qtime,jdbcType=TIMESTAMP},
      quptimestamp = #{record.quptimestamp,jdbcType=TIMESTAMP},
      qtype = #{record.qtype,jdbcType=VARCHAR},
      qgood = #{record.qgood,jdbcType=INTEGER},
      qbad = #{record.qbad,jdbcType=INTEGER},
      qdec = #{record.qdec,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update faq
    set qid = #{record.qid,jdbcType=INTEGER},
      qname = #{record.qname,jdbcType=VARCHAR},
      qcreater_id = #{record.qcreaterId,jdbcType=INTEGER},
      qtime = #{record.qtime,jdbcType=TIMESTAMP},
      quptimestamp = #{record.quptimestamp,jdbcType=TIMESTAMP},
      qtype = #{record.qtype,jdbcType=VARCHAR},
      qgood = #{record.qgood,jdbcType=INTEGER},
      qbad = #{record.qbad,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.sicnu.cs.model.Faq">
    update faq
    <set>
      <if test="qname != null">
        qname = #{qname,jdbcType=VARCHAR},
      </if>
      <if test="qcreaterId != null">
        qcreater_id = #{qcreaterId,jdbcType=INTEGER},
      </if>
      <if test="qtime != null">
        qtime = #{qtime,jdbcType=TIMESTAMP},
      </if>
      <if test="quptimestamp != null">
        quptimestamp = #{quptimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="qtype != null">
        qtype = #{qtype,jdbcType=VARCHAR},
      </if>
      <if test="qgood != null">
        qgood = #{qgood,jdbcType=INTEGER},
      </if>
      <if test="qbad != null">
        qbad = #{qbad,jdbcType=INTEGER},
      </if>
      <if test="qdec != null">
        qdec = #{qdec,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where qid = #{qid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.sicnu.cs.model.Faq">
    update faq
    set qname = #{qname,jdbcType=VARCHAR},
      qcreater_id = #{qcreaterId,jdbcType=INTEGER},
      qtime = #{qtime,jdbcType=TIMESTAMP},
      quptimestamp = #{quptimestamp,jdbcType=TIMESTAMP},
      qtype = #{qtype,jdbcType=VARCHAR},
      qgood = #{qgood,jdbcType=INTEGER},
      qbad = #{qbad,jdbcType=INTEGER},
      qdec = #{qdec,jdbcType=LONGVARCHAR}
    where qid = #{qid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.sicnu.cs.model.Faq">
    update faq
    set qname = #{qname,jdbcType=VARCHAR},
      qcreater_id = #{qcreaterId,jdbcType=INTEGER},
      qtime = #{qtime,jdbcType=TIMESTAMP},
      quptimestamp = #{quptimestamp,jdbcType=TIMESTAMP},
      qtype = #{qtype,jdbcType=VARCHAR},
      qgood = #{qgood,jdbcType=INTEGER},
      qbad = #{qbad,jdbcType=INTEGER}
    where qid = #{qid,jdbcType=INTEGER}
  </update>
</mapper>