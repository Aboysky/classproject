<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.sicnu.cs.dao.VersionhistoryMapper">
  <resultMap id="BaseResultMap" type="cn.edu.sicnu.cs.model.Versionhistory">
    <id column="vid" jdbcType="INTEGER" property="vid" />
    <result column="vbigversion" jdbcType="VARCHAR" property="vbigversion" />
    <result column="vversion" jdbcType="VARCHAR" property="vversion" />
    <result column="vtime" jdbcType="TIMESTAMP" property="vtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.sicnu.cs.model.Versionhistory">
    <result column="vdesc" jdbcType="LONGVARCHAR" property="vdesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    vid, vbigversion, vversion, vtime
  </sql>
  <sql id="Blob_Column_List">
    vdesc
  </sql>
  <select id="findVersionHistoryVBIG" resultType="cn.edu.sicnu.cs.model.Versionhistory">
    select distinct(vbigversion) from versionhistory order by versionhistory;
  </select>
  <select id="findVersionHistoryListByVBIG" resultType="cn.edu.sicnu.cs.model.Versionhistory">
    select vversion from versionhistory where vbigversion=#{vbig} order by vversion;
  </select>
  <select id="findVersionHistoryByVersion" resultType="cn.edu.sicnu.cs.model.Versionhistory">
    select * from versionhistory where vversion=#{version};
  </select>

  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.sicnu.cs.model.VersionhistoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from versionhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.sicnu.cs.model.VersionhistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from versionhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from versionhistory
    where vid = #{vid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from versionhistory
    where vid = #{vid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.sicnu.cs.model.VersionhistoryExample">
    delete from versionhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.sicnu.cs.model.Versionhistory">
    insert into versionhistory (vid, vbigversion, vversion, 
      vtime, vdesc)
    values (#{vid,jdbcType=INTEGER}, #{vbigversion,jdbcType=VARCHAR}, #{vversion,jdbcType=VARCHAR}, 
      #{vtime,jdbcType=TIMESTAMP}, #{vdesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.sicnu.cs.model.Versionhistory">
    insert into versionhistory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="vid != null">
        vid,
      </if>
      <if test="vbigversion != null">
        vbigversion,
      </if>
      <if test="vversion != null">
        vversion,
      </if>
      <if test="vtime != null">
        vtime,
      </if>
      <if test="vdesc != null">
        vdesc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="vid != null">
        #{vid,jdbcType=INTEGER},
      </if>
      <if test="vbigversion != null">
        #{vbigversion,jdbcType=VARCHAR},
      </if>
      <if test="vversion != null">
        #{vversion,jdbcType=VARCHAR},
      </if>
      <if test="vtime != null">
        #{vtime,jdbcType=TIMESTAMP},
      </if>
      <if test="vdesc != null">
        #{vdesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.sicnu.cs.model.VersionhistoryExample" resultType="java.lang.Long">
    select count(*) from versionhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update versionhistory
    <set>
      <if test="record.vid != null">
        vid = #{record.vid,jdbcType=INTEGER},
      </if>
      <if test="record.vbigversion != null">
        vbigversion = #{record.vbigversion,jdbcType=VARCHAR},
      </if>
      <if test="record.vversion != null">
        vversion = #{record.vversion,jdbcType=VARCHAR},
      </if>
      <if test="record.vtime != null">
        vtime = #{record.vtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.vdesc != null">
        vdesc = #{record.vdesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update versionhistory
    set vid = #{record.vid,jdbcType=INTEGER},
      vbigversion = #{record.vbigversion,jdbcType=VARCHAR},
      vversion = #{record.vversion,jdbcType=VARCHAR},
      vtime = #{record.vtime,jdbcType=TIMESTAMP},
      vdesc = #{record.vdesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update versionhistory
    set vid = #{record.vid,jdbcType=INTEGER},
      vbigversion = #{record.vbigversion,jdbcType=VARCHAR},
      vversion = #{record.vversion,jdbcType=VARCHAR},
      vtime = #{record.vtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.sicnu.cs.model.Versionhistory">
    update versionhistory
    <set>
      <if test="vbigversion != null">
        vbigversion = #{vbigversion,jdbcType=VARCHAR},
      </if>
      <if test="vversion != null">
        vversion = #{vversion,jdbcType=VARCHAR},
      </if>
      <if test="vtime != null">
        vtime = #{vtime,jdbcType=TIMESTAMP},
      </if>
      <if test="vdesc != null">
        vdesc = #{vdesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where vid = #{vid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.sicnu.cs.model.Versionhistory">
    update versionhistory
    set vbigversion = #{vbigversion,jdbcType=VARCHAR},
      vversion = #{vversion,jdbcType=VARCHAR},
      vtime = #{vtime,jdbcType=TIMESTAMP},
      vdesc = #{vdesc,jdbcType=LONGVARCHAR}
    where vid = #{vid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.sicnu.cs.model.Versionhistory">
    update versionhistory
    set vbigversion = #{vbigversion,jdbcType=VARCHAR},
      vversion = #{vversion,jdbcType=VARCHAR},
      vtime = #{vtime,jdbcType=TIMESTAMP}
    where vid = #{vid,jdbcType=INTEGER}
  </update>
</mapper>