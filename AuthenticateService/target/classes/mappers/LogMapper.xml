<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.sicnu.cs.dao.LogMapper">
  <resultMap id="BaseResultMap" type="cn.edu.sicnu.cs.model.Log">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="logType" jdbcType="VARCHAR" property="logtype" />
    <result column="requestIp" jdbcType="VARCHAR" property="requestip" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="browser" jdbcType="VARCHAR" property="browser" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.sicnu.cs.model.LogWithBLOBs">
    <result column="params" jdbcType="LONGVARCHAR" property="params" />
    <result column="time" jdbcType="LONGVARCHAR" property="time" />
    <result column="exceptionDetail" jdbcType="LONGVARCHAR" property="exceptiondetail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, description, method, logType, requestIp, address, browser, createTime
  </sql>
  <sql id="Blob_Column_List">
    params, time, exceptionDetail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.sicnu.cs.model.LogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.sicnu.cs.model.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.sicnu.cs.model.LogExample">
    delete from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.sicnu.cs.model.LogWithBLOBs">
    insert into log (id, username, description, 
      method, logType, requestIp, 
      address, browser, createTime, 
      params, time, exceptionDetail
      )
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{logtype,jdbcType=VARCHAR}, #{requestip,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{browser,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{params,jdbcType=LONGVARCHAR}, #{time,jdbcType=LONGVARCHAR}, #{exceptiondetail,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.sicnu.cs.model.LogWithBLOBs">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="logtype != null">
        logType,
      </if>
      <if test="requestip != null">
        requestIp,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="browser != null">
        browser,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="exceptiondetail != null">
        exceptionDetail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="logtype != null">
        #{logtype,jdbcType=VARCHAR},
      </if>
      <if test="requestip != null">
        #{requestip,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="browser != null">
        #{browser,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="params != null">
        #{params,jdbcType=LONGVARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=LONGVARCHAR},
      </if>
      <if test="exceptiondetail != null">
        #{exceptiondetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.sicnu.cs.model.LogExample" resultType="java.lang.Long">
    select count(*) from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.logtype != null">
        logType = #{record.logtype,jdbcType=VARCHAR},
      </if>
      <if test="record.requestip != null">
        requestIp = #{record.requestip,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.browser != null">
        browser = #{record.browser,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.params != null">
        params = #{record.params,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.exceptiondetail != null">
        exceptionDetail = #{record.exceptiondetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update log
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      logType = #{record.logtype,jdbcType=VARCHAR},
      requestIp = #{record.requestip,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      browser = #{record.browser,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      params = #{record.params,jdbcType=LONGVARCHAR},
      time = #{record.time,jdbcType=LONGVARCHAR},
      exceptionDetail = #{record.exceptiondetail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      logType = #{record.logtype,jdbcType=VARCHAR},
      requestIp = #{record.requestip,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      browser = #{record.browser,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.sicnu.cs.model.LogWithBLOBs">
    update log
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="logtype != null">
        logType = #{logtype,jdbcType=VARCHAR},
      </if>
      <if test="requestip != null">
        requestIp = #{requestip,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="browser != null">
        browser = #{browser,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=LONGVARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=LONGVARCHAR},
      </if>
      <if test="exceptiondetail != null">
        exceptionDetail = #{exceptiondetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.sicnu.cs.model.LogWithBLOBs">
    update log
    set username = #{username,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      logType = #{logtype,jdbcType=VARCHAR},
      requestIp = #{requestip,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      browser = #{browser,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      params = #{params,jdbcType=LONGVARCHAR},
      time = #{time,jdbcType=LONGVARCHAR},
      exceptionDetail = #{exceptiondetail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.sicnu.cs.model.Log">
    update log
    set username = #{username,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      logType = #{logtype,jdbcType=VARCHAR},
      requestIp = #{requestip,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      browser = #{browser,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>